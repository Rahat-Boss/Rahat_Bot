
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ST Bot Dashboard</title>
    <link href="/css/phoenix.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <style>
        .stat-card {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border-radius: 15px;
            padding: 20px;
            color: white;
            margin-bottom: 20px;
            box-shadow: 0 10px 20px rgba(0,0,0,0.1);
        }
        .stat-card h3 {
            margin-bottom: 15px;
            font-weight: 600;
        }
        .info-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }
        .cookie-section {
            background: #f8f9fa;
            border-radius: 10px;
            padding: 25px;
            margin-top: 30px;
        }
        .cookie-textarea {
            width: 100%;
            height: 200px;
            resize: vertical;
            font-family: 'Courier New', monospace;
            font-size: 12px;
        }
        .header-section {
            text-align: center;
            padding: 30px 0;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border-radius: 15px;
            margin-bottom: 30px;
        }
        .logo {
            width: 80px;
            height: 80px;
            border-radius: 50%;
            margin-bottom: 15px;
        }
        .real-time-data {
            background: #28a745;
            color: white;
            padding: 10px 15px;
            border-radius: 5px;
            display: inline-block;
            margin: 5px;
        }
        .update-btn {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border: none;
            color: white;
            padding: 12px 30px;
            border-radius: 25px;
            font-weight: 600;
            transition: all 0.3s ease;
        }
        .update-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.2);
        }
    </style>
</head>
<body>
    <div class="container-fluid p-4">
        <!-- Header Section -->
        <div class="header-section">
            <img src="/images/beb-logo.png" alt="ST Bot Logo" class="logo">
            <h1 class="display-4">ST | Sheikh Tamim</h1>
            <p class="lead">Bot Management Dashboard</p>
        </div>

        <!-- Real-time Stats -->
        <div class="text-center mb-4">
            <div class="real-time-data" id="realtime-uptime">
                <i class="fas fa-clock"></i> Uptime: <%= systemInfo.uptime %>
            </div>
            <div class="real-time-data" id="realtime-threads">
                <i class="fas fa-users"></i> Threads: <%= botInfo.totalThreads %>
            </div>
            <div class="real-time-data" id="realtime-users">
                <i class="fas fa-user"></i> Users: <%= botInfo.totalUsers %>
            </div>
            <div class="real-time-data" id="realtime-memory">
                <i class="fas fa-memory"></i> Memory: Loading...
            </div>
        </div>

        <!-- Info Grid -->
        <div class="info-grid">
            <!-- System Information -->
            <div class="stat-card">
                <h3><i class="fas fa-server"></i> System Information</h3>
                <div class="row">
                    <div class="col-6"><strong>Platform:</strong> <%= systemInfo.platform %></div>
                    <div class="col-6"><strong>Architecture:</strong> <%= systemInfo.arch %></div>
                    <div class="col-6"><strong>Node Version:</strong> <%= systemInfo.nodeVersion %></div>
                    <div class="col-6"><strong>CPUs:</strong> <%= systemInfo.cpus %></div>
                    <div class="col-6"><strong>Total Memory:</strong> <%= systemInfo.totalMemory %></div>
                    <div class="col-6"><strong>Free Memory:</strong> <%= systemInfo.freeMemory %></div>
                    <div class="col-12 mt-2"><strong>Hostname:</strong> <%= systemInfo.hostname %></div>
                </div>
            </div>

            <!-- Bot Information -->
            <div class="stat-card">
                <h3><i class="fas fa-robot"></i> Bot Information</h3>
                <div class="row">
                    <div class="col-6"><strong>Bot ID:</strong> <%= botInfo.botID %></div>
                    <div class="col-6"><strong>Prefix:</strong> <%= botInfo.prefix %></div>
                    <div class="col-6"><strong>Language:</strong> <%= botInfo.language %></div>
                    <div class="col-6"><strong>Nickname:</strong> <%= botInfo.nickname %></div>
                    <div class="col-6"><strong>Version:</strong> <%= botInfo.version %></div>
                    <div class="col-6"><strong>Uptime:</strong> <%= systemInfo.uptime %></div>
                </div>
            </div>

            <!-- Performance Stats -->
            <div class="stat-card">
                <h3><i class="fas fa-chart-line"></i> Performance Stats</h3>
                <div class="row">
                    <div class="col-6"><strong>Total Threads:</strong> <%= botInfo.totalThreads %></div>
                    <div class="col-6"><strong>Total Users:</strong> <%= botInfo.totalUsers %></div>
                    <div class="col-6"><strong>Uptime (Seconds):</strong> <%= systemInfo.uptimeSeconds %></div>
                    <div class="col-6"><strong>Status:</strong> <span class="badge bg-success">Online</span></div>
                </div>
            </div>

            <!-- Quick Actions -->
            <div class="stat-card">
                <h3><i class="fas fa-tools"></i> Quick Actions</h3>
                <div class="d-grid gap-2">
                    <button class="btn btn-light" onclick="refreshStats()">
                        <i class="fas fa-sync"></i> Refresh Stats
                    </button>
                    <button class="btn btn-light" onclick="restartBot()">
                        <i class="fas fa-restart"></i> Restart Bot
                    </button>
                </div>
            </div>
        </div>

        <!-- Cookie Management Section -->
        <div class="cookie-section">
            <h3><i class="fas fa-cookie-bite"></i> Account Cookie Management</h3>
            <p class="text-muted">Update your Facebook account cookie here. The bot will restart automatically after updating.</p>
            
            <form id="cookieForm">
                <div class="mb-3">
                    <label for="cookieContent" class="form-label">Cookie Content (account.txt):</label>
                    <textarea class="form-control cookie-textarea" id="cookieContent" name="cookie" placeholder="Paste your cookie content here..."><%= accountContent %></textarea>
                </div>
                <div class="d-flex gap-2">
                    <button type="submit" class="update-btn">
                        <i class="fas fa-save"></i> Update Cookie & Restart
                    </button>
                    <button type="button" class="btn btn-secondary" onclick="resetCookie()">
                        <i class="fas fa-undo"></i> Reset
                    </button>
                </div>
            </form>
            
            <div id="updateMessage" class="mt-3"></div>
        </div>
    </div>

    <script>
        // Real-time stats update
        function updateRealTimeStats() {
            fetch('/api/stats')
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    document.getElementById('realtime-uptime').innerHTML = 
                        '<i class="fas fa-clock"></i> Uptime: ' + (data.uptime || 'Unknown');
                    document.getElementById('realtime-threads').innerHTML = 
                        '<i class="fas fa-users"></i> Threads: ' + (data.totalThreads || 0);
                    document.getElementById('realtime-users').innerHTML = 
                        '<i class="fas fa-user"></i> Users: ' + (data.totalUsers || 0);
                    document.getElementById('realtime-memory').innerHTML = 
                        '<i class="fas fa-memory"></i> Memory: ' + (data.memoryUsage || 'Unknown');
                })
                .catch(err => {
                    console.error('Error updating stats:', err);
                    // Show fallback data
                    document.getElementById('realtime-memory').innerHTML = 
                        '<i class="fas fa-memory"></i> Memory: Loading...';
                });
        }

        // Update stats every 5 seconds
        setInterval(updateRealTimeStats, 5000);

        // Cookie form submission
        $('#cookieForm').on('submit', function(e) {
            e.preventDefault();
            
            const cookieContent = $('#cookieContent').val();
            const messageDiv = $('#updateMessage');
            
            if (!cookieContent.trim()) {
                messageDiv.html('<div class="alert alert-danger">Please enter cookie content</div>');
                return;
            }
            
            messageDiv.html('<div class="alert alert-info">Updating cookie and restarting bot...</div>');
            
            fetch('/update-cookie', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ cookie: cookieContent })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    messageDiv.html('<div class="alert alert-success">' + data.message + '</div>');
                    setTimeout(() => {
                        window.location.reload();
                    }, 3000);
                } else {
                    messageDiv.html('<div class="alert alert-danger">' + data.message + '</div>');
                }
            })
            .catch(err => {
                messageDiv.html('<div class="alert alert-danger">Error: ' + err.message + '</div>');
            });
        });

        function resetCookie() {
            location.reload();
        }

        function refreshStats() {
            updateRealTimeStats();
        }

        function restartBot() {
            if (confirm('Are you sure you want to restart the bot?')) {
                fetch('/update-cookie', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ cookie: $('#cookieContent').val() })
                });
            }
        }
    </script>
</body>
</html>
