
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ST Bot Dashboard</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        body {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            font-family: 'Arial', sans-serif;
        }
        .dashboard-container {
            background: white;
            border-radius: 20px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
            margin: 20px;
            overflow: hidden;
        }
        .header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 30px;
            text-align: center;
        }
        .stats-card {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border-radius: 15px;
            padding: 25px;
            color: white;
            margin-bottom: 20px;
            text-align: center;
            transition: transform 0.3s ease;
        }
        .stats-card:hover {
            transform: translateY(-5px);
        }
        .stats-number {
            font-size: 2.5rem;
            font-weight: bold;
            margin-bottom: 10px;
        }
        .stats-label {
            font-size: 1rem;
            opacity: 0.9;
        }
        .info-section {
            background: #f8f9fa;
            border-radius: 15px;
            padding: 25px;
            margin-bottom: 25px;
        }
        .btn-custom {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border: none;
            color: white;
            padding: 12px 30px;
            border-radius: 25px;
            cursor: pointer;
            transition: all 0.3s ease;
            margin: 5px;
        }
        .btn-custom:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.2);
        }
        .btn-danger-custom {
            background: linear-gradient(135deg, #ff6b6b 0%, #ee5a52 100%);
        }
        .status-badge {
            display: inline-block;
            padding: 5px 15px;
            border-radius: 20px;
            font-size: 0.9rem;
            font-weight: 500;
        }
        .status-online {
            background: #d4edda;
            color: #155724;
        }
        .cookie-section {
            background: white;
            border-radius: 15px;
            padding: 25px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            margin-bottom: 25px;
        }
        .loading {
            display: none;
            text-align: center;
            padding: 20px;
        }
        .spinner {
            border: 4px solid #f3f3f3;
            border-top: 4px solid #667eea;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            animation: spin 1s linear infinite;
            margin: 0 auto;
        }
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        .alert-custom {
            border-radius: 10px;
            border: none;
        }
    </style>
</head>
<body>
    <div class="dashboard-container">
        <div class="header">
            <h1><i class="fas fa-robot"></i> ST Bot Dashboard</h1>
            <p class="mb-0">Complete Bot Management Panel</p>
            <span class="status-badge status-online">
                <i class="fas fa-circle"></i> Online
            </span>
        </div>

        <div class="container-fluid p-4">
            <!-- Stats Cards -->
            <div class="row">
                <div class="col-md-3">
                    <div class="stats-card">
                        <div class="stats-number" id="totalUsers"><%= it.botInfo.totalUsers %></div>
                        <div class="stats-label"><i class="fas fa-users"></i> Total Users</div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="stats-card">
                        <div class="stats-number" id="totalThreads"><%= it.botInfo.totalThreads %></div>
                        <div class="stats-label"><i class="fas fa-comments"></i> Total Threads</div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="stats-card">
                        <div class="stats-number" id="uptime"><%= it.systemInfo.uptime %></div>
                        <div class="stats-label"><i class="fas fa-clock"></i> Uptime</div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="stats-card">
                        <div class="stats-number" id="memoryUsage"><%= it.systemInfo.memoryUsed %></div>
                        <div class="stats-label"><i class="fas fa-memory"></i> Memory Usage</div>
                    </div>
                </div>
            </div>

            <!-- Control Panel -->
            <div class="row">
                <div class="col-12">
                    <div class="info-section">
                        <h3><i class="fas fa-cogs"></i> Bot Controls</h3>
                        <div class="text-center">
                            <button onclick="restartBot()" class="btn btn-custom btn-danger-custom">
                                <i class="fas fa-sync-alt"></i> Restart Bot
                            </button>
                            <button onclick="updateStats(true)" class="btn btn-custom">
                                <i class="fas fa-refresh"></i> Refresh Stats
                            </button>
                            <button onclick="viewLogs()" class="btn btn-custom">
                                <i class="fas fa-file-alt"></i> View Logs
                            </button>
                        </div>
                        <div id="controlMessage" class="mt-3"></div>
                    </div>
                </div>
            </div>

            <div class="row">
                <!-- Bot Information -->
                <div class="col-md-6">
                    <div class="info-section">
                        <h3><i class="fas fa-robot"></i> Bot Information</h3>
                        <table class="table table-borderless">
                            <tr>
                                <td><strong><i class="fas fa-id-badge"></i> Bot ID:</strong></td>
                                <td><%= it.botInfo.botID %></td>
                            </tr>
                            <tr>
                                <td><strong><i class="fas fa-at"></i> Prefix:</strong></td>
                                <td><code><%= it.botInfo.prefix %></code></td>
                            </tr>
                            <tr>
                                <td><strong><i class="fas fa-language"></i> Language:</strong></td>
                                <td><%= it.botInfo.language %></td>
                            </tr>
                            <tr>
                                <td><strong><i class="fas fa-user"></i> Nickname:</strong></td>
                                <td><%= it.botInfo.nickname %></td>
                            </tr>
                            <tr>
                                <td><strong><i class="fas fa-code-branch"></i> Version:</strong></td>
                                <td><%= it.botInfo.version %></td>
                            </tr>
                        </table>
                    </div>
                </div>

                <!-- System Information -->
                <div class="col-md-6">
                    <div class="info-section">
                        <h3><i class="fas fa-server"></i> System Information</h3>
                        <table class="table table-borderless">
                            <tr>
                                <td><strong><i class="fab fa-linux"></i> Platform:</strong></td>
                                <td><%= it.systemInfo.platform %></td>
                            </tr>
                            <tr>
                                <td><strong><i class="fas fa-microchip"></i> Architecture:</strong></td>
                                <td><%= it.systemInfo.arch %></td>
                            </tr>
                            <tr>
                                <td><strong><i class="fab fa-node-js"></i> Node Version:</strong></td>
                                <td><%= it.systemInfo.nodeVersion %></td>
                            </tr>
                            <tr>
                                <td><strong><i class="fas fa-microchip"></i> CPUs:</strong></td>
                                <td><%= it.systemInfo.cpus %></td>
                            </tr>
                            <tr>
                                <td><strong><i class="fas fa-memory"></i> Total Memory:</strong></td>
                                <td><%= it.systemInfo.totalMemory %></td>
                            </tr>
                            <tr>
                                <td><strong><i class="fas fa-memory"></i> Free Memory:</strong></td>
                                <td><%= it.systemInfo.freeMemory %></td>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>

            <!-- Cookie Management -->
            <div class="row">
                <div class="col-12">
                    <div class="cookie-section">
                        <h3><i class="fas fa-cookie-bite"></i> Cookie Management</h3>
                        <p class="text-muted">Update your Facebook account cookie here</p>
                        <form id="cookieForm">
                            <div class="mb-3">
                                <label for="cookieContent" class="form-label">Cookie Content:</label>
                                <textarea id="cookieContent" class="form-control" rows="5" placeholder="Paste your Facebook cookie here..."><%= it.accountContent %></textarea>
                            </div>
                            <button type="submit" class="btn btn-custom">
                                <i class="fas fa-save"></i> Update Cookie
                            </button>
                        </form>
                        <div id="cookieMessage" class="mt-3"></div>
                    </div>
                </div>
            </div>

            <!-- Loading Animation -->
            <div id="loading" class="loading">
                <div class="spinner"></div>
                <p class="mt-3">Processing...</p>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        let statsInterval;

        // Start auto-refresh on load
        document.addEventListener('DOMContentLoaded', function() {
            startStatsRefresh();
        });

        function startStatsRefresh() {
            updateStats(false);
            statsInterval = setInterval(() => updateStats(false), 5000);
        }

        function updateStats(showMessage = false) {
            fetch('/api/stats')
                .then(response => response.json())
                .then(data => {
                    if (data.error) {
                        console.error('Stats error:', data);
                        return;
                    }
                    
                    document.getElementById('totalUsers').textContent = data.totalUsers || 0;
                    document.getElementById('totalThreads').textContent = data.totalThreads || 0;
                    document.getElementById('uptime').textContent = data.uptime || 'Unknown';
                    document.getElementById('memoryUsage').textContent = data.memoryUsage || 'Unknown';
                    
                    if (showMessage) {
                        showAlert('Stats refreshed successfully!', 'success', 'controlMessage');
                    }
                })
                .catch(error => {
                    console.error('Error updating stats:', error);
                    if (showMessage) {
                        showAlert('Failed to refresh stats', 'danger', 'controlMessage');
                    }
                });
        }

        function restartBot() {
            if (!confirm('Are you sure you want to restart the bot? This will temporarily disconnect the bot.')) {
                return;
            }

            showLoading(true);
            clearInterval(statsInterval);

            fetch('/api/restart', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                }
            })
            .then(response => response.json())
            .then(data => {
                showLoading(false);
                if (data.success) {
                    showAlert('Bot is restarting... Please wait 10-15 seconds.', 'success', 'controlMessage');
                    setTimeout(() => {
                        startStatsRefresh();
                        showAlert('Bot restarted successfully!', 'success', 'controlMessage');
                    }, 15000);
                } else {
                    showAlert('Failed to restart bot: ' + data.message, 'danger', 'controlMessage');
                    startStatsRefresh();
                }
            })
            .catch(error => {
                showLoading(false);
                showAlert('Error restarting bot: ' + error.message, 'danger', 'controlMessage');
                startStatsRefresh();
            });
        }

        function viewLogs() {
            window.open('/api/logs', '_blank');
        }

        // Cookie form handler
        document.getElementById('cookieForm').addEventListener('submit', function(e) {
            e.preventDefault();

            const cookieContent = document.getElementById('cookieContent').value;

            if (!cookieContent.trim()) {
                showAlert('Please enter cookie content', 'danger', 'cookieMessage');
                return;
            }

            showLoading(true);

            fetch('/update-cookie', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ cookie: cookieContent })
            })
            .then(response => response.json())
            .then(data => {
                showLoading(false);
                if (data.success) {
                    showAlert(data.message, 'success', 'cookieMessage');
                } else {
                    showAlert(data.message, 'danger', 'cookieMessage');
                }
            })
            .catch(error => {
                showLoading(false);
                showAlert('Error updating cookie: ' + error.message, 'danger', 'cookieMessage');
            });
        });

        function showAlert(message, type, elementId) {
            const alertDiv = document.getElementById(elementId);
            alertDiv.innerHTML = `
                <div class="alert alert-${type} alert-custom alert-dismissible fade show" role="alert">
                    ${message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            `;
        }

        function showLoading(show) {
            document.getElementById('loading').style.display = show ? 'block' : 'none';
        }
    </script>
</body>
</html>
